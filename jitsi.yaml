publicURL: https://jitsi.faults.quest
tz: UTC
websockets:
  colibri:
    enabled: true
  xmpp:
    enabled: true
jvb:
  # This will expose JVB to the world using hostPort feature,
  # so you won't need to come up with weird UDP proxying schemes:
  useHostPort: true
  # Use a custom UDP port (in case if your k8s doesn't allow to bind
  # to hostPorts < 32000
  UDPPort: 10000
  publicIPs:
    - 128.32.37.64
  stunServers: "meet-jit-si-turnrelay.jitsi.net:443,stun1.l.google.com:19302,stun2.l.google.com:19302,stun3.l.google.com:19302,stun4.l.google.com:19302"
web:
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-CSRFToken,X-CustomHeader,X-Requested-With
      nginx.ingress.kubernetes.io/cors-allow-methods: GET, POST, PUT, PATCH, DELETE, OPTIONS
      nginx.ingress.kubernetes.io/cors-allow-origin: "*"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/server-snippet: |-
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
    hosts:
    - host: jitsi.faults.quest
      paths: ['/']
    tls:
      - secretName: "jitsi-key-pair"
        hosts:
          - jitsi.faults.quest
